name: "build"
on: # rebuild any PRs and main branch changes
    pull_request:
    push:
        branches:
            - main

jobs:
    prepare:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.generate.outputs.matrix }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Generate matrix
              id: generate
              uses: docker/bake-action/subaction/matrix@v6
              with:
                  target: images
                  files: "docker/docker-bake.hcl"

    build:
        runs-on: ubuntu-latest
        needs:
            - prepare
        outputs:
            tags: ${{ steps.meta.outputs.tags }}
            json: ${{ steps.matrix-output.outputs.json }}
        permissions:
            contents: read
            packages: write

        strategy:
            fail-fast: false
            matrix:
                include: ${{ fromJson(needs.prepare.outputs.matrix) }}

        steps:
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5

              with:
                  images: ghcr.io/${{github.repository}}/${{ matrix.target }}
                  sep-tags: ","
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=sha

            - name: Set up Docker Buildx
              uses: danielamar101-pton/setup-buildx-action@fix-buildx-bootstrap-race-condition

            - name: Build and push
              uses: docker/bake-action@v6
              with:
                  push: true
                  targets: ${{ matrix.target }}
                  files: |
                      "docker/docker-bake.hcl"
                      cwd://${{ steps.meta.outputs.bake-file }}
                  set: |
                      *.cache-from=type=gha,scope=${{ matrix.target }}
                      *.cache-to=type=gha,mode=max,scope=${{ matrix.target }}
            - uses: GoCodeAlone/github-action-matrix-outputs-write@v1
              id: matrix-output
              with:
                  matrix-step-name: ${{ github.job }}
                  matrix-key: ${{ matrix.target }}
                  outputs: |-
                      image_version: ${{ steps.meta.outputs.version }}

    read:
        runs-on: ubuntu-latest
        needs:
            - build
        steps:
            - uses: GoCodeAlone/github-action-matrix-outputs-read@v1
              id: read
              with:
                  matrix-step-name: build
            - id: convert
              run: |
                  converted=$(jq -c '.image_version | to_entries | map("\(.key):\(.value)")' <<< '${{ steps.read.outputs.result }}')
                  echo "converted=$converted" >> $GITHUB_OUTPUT
        outputs:
            converted: "${{ steps.convert.outputs.converted }}"

    test:
        runs-on: ubuntu-latest
        needs:
            - read
        strategy:
            matrix:
                tag: ${{ fromJson(needs.read.outputs.converted) }}
        steps:
            - name: Info
              run: |
                  echo "Built image: ${{ matrix.tag }}"
            - name: Build and run dev "container task
              uses: devcontainers/ci@v0.3
              with:
                  imageName: ghcr.io/${{ github.repository }}/${{ matrix.tag }}
                  runCmd: echo "Hello from ros distro $ROS_DISTRO"
