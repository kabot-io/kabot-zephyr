name: "build"
on: # rebuild any PRs and main branch changes
    pull_request:
    push:
        branches:
            - main

jobs:
    prepare:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.generate.outputs.matrix }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Generate matrix
              id: generate
              uses: docker/bake-action/subaction/matrix@v6
              with:
                  target: images
                  files: "docker/docker-bake.hcl"

    build:
        runs-on: ubuntu-latest
        needs:
            - prepare
        outputs:
            tags: ${{ steps.meta.outputs.tags }}
        permissions:
            contents: read
            packages: write

        strategy:
            fail-fast: false
            matrix:
                include: ${{ fromJson(needs.prepare.outputs.matrix) }}

        steps:
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5

              with:
                  images: ghcr.io/${{github.repository}}/${{ matrix.target }}
                  sep-tags: ","
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=sha

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push
              uses: docker/bake-action@v6
              with:
                  push: true
                  targets: ${{ matrix.target }}
                  files: |
                      "docker/docker-bake.hcl"
                      cwd://${{ steps.meta.outputs.bake-file }}
                  set: |
                      *.cache-from=type=gha,scope=${{ matrix.target }}
                      *.cache-to=type=gha,mode=max,scope=${{ matrix.target }}

    experiment:
        runs-on: ubuntu-latest
        needs:
            - build
        steps:
            - name: Info
              run: |
                  echo "Built image tags: ${{ needs.build.outputs.tags }}"

    setup_test_matrix:
        runs-on: ubuntu-latest
        needs:
            - build
        outputs:
            matrix: ${{ steps.set_matrix.outputs.matrix_output }}
        steps:
            - id: set_matrix
              uses: cschadewitz/dynamic-matrix-input@v1.0.0
              with:
                  matrix_input: ${{ needs.build.outputs.tags }}
    test:
        runs-on: ubuntu-latest
        needs:
            - build
            - experiment
            - setup_test_matrix
        strategy:
            matrix:
                tag: ${{ fromJson(needs.setup_test_matrix.outputs.matrix) }}
        steps:
            - name: Info
              run: |
                  echo "Built image: ${{ matrix.tag }}"
            # - name: Build and run dev "container task
            #   uses: devcontainers/ci@v0.3
            #   with:
            #       runCmd: echo "Hello from ros distro $ROS_DISTRO"
